<?php
/**
 * Created by PhpStorm.
 * User: Bernigend
 * Date: 12.11.2019
 * Time: 18:30
 */

namespace Core\Bots\Telegram;


use Core\AViewer;
use Core\Schedule;

class TelegramViewer extends AViewer
{
	/**
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–º –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤–∏–¥–µ
	 *
	 * @param array $schedule - –º–∞—Å—Å–∏–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
	 * @return string
	 */
	public function viewToday(array $schedule): string
	{
		$week = Schedule::getWeekName($schedule['data']['usual_time']);
		if ($week == 'at_numerator')
			$message = '–í—ã —É—á–∏—Ç–µ—Å—å –ø–æ —á–∏—Å–ª–∏—Ç–µ–ª—é';
		else
			$message = '–í—ã —É—á–∏—Ç–µ—Å—å –ø–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—é';
		$message .= "\n";

		if (date('n') > 8)
			$message .= '–°–µ–º–µ—Å—Ç—Ä: 1';
		else
			$message .= '–°–µ–º–µ—Å—Ç—Ä: 2';
		$message .= "\n";

		$message .= '–ì—Ä—É–ø–ø–∞: ' . $schedule['data']['group']['name'] . ' (' . $schedule['data']['group']['city']  . ')';
		$message .= "\n";

		$message .= '–î–∞—Ç–∞: *' . date('d.m', time()) . "*\n\n";
		$message .= " ---- ---- \n\n";

		$message .= $this->viewDay($schedule['data']['schedule_days'], date('N'), $week) . "\n";
		$message .= " ---- ---- \n\n";

		return $message;
	}

	/**
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–º –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤–∏–¥–µ
	 *
	 * @param array $schedule - –º–∞—Å—Å–∏–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
	 * @return string
	 */
	public function viewTomorrow(array $schedule): string
	{
		$week = Schedule::getWeekName($schedule['data']['usual_time'], true);
		if ($week == 'at_numerator')
			$message = '–ó–∞–≤—Ç—Ä–∞ –≤—ã —É—á–∏—Ç–µ—Å—å –ø–æ —á–∏—Å–ª–∏—Ç–µ–ª—é';
		else
			$message = '–ó–∞–≤—Ç—Ä–∞ –≤—ã —É—á–∏—Ç–µ—Å—å –ø–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—é';
		$message .= "\n";

		if (date('n') > 8)
			$message .= '–°–µ–º–µ—Å—Ç—Ä: 1';
		else
			$message .= '–°–µ–º–µ—Å—Ç—Ä: 2';
		$message .= "\n";

		$message .= '–ì—Ä—É–ø–ø–∞: ' . $schedule['data']['group']['name'] . ' (' . $schedule['data']['group']['city']  . ')';
		$message .= "\n";

		$message .= '–î–∞—Ç–∞: *' . date('d.m', time()+86400) . "*\n\n";
		$message .= " ---- ---- \n\n";

		$message .= $this->viewDay($schedule['data']['schedule_days'], date('N', time()+86400), $week) . "\n";
		$message .= " ---- ---- \n\n";

		return $message;
	}

	/**
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–º –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤–∏–¥–µ
	 *
	 * @param array $schedule - –º–∞—Å—Å–∏–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
	 * @return string
	 */
	public function viewThisWeek(array $schedule): string
	{
		$week = Schedule::getWeekName($schedule['data']['usual_time']);
		if ($week == 'at_numerator')
			$message = '–í—ã —É—á–∏—Ç–µ—Å—å –ø–æ —á–∏—Å–ª–∏—Ç–µ–ª—é';
		else
			$message = '–í—ã —É—á–∏—Ç–µ—Å—å –ø–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—é';
		$message .= "\n";

		if (date('n') > 8)
			$message .= '–°–µ–º–µ—Å—Ç—Ä: 1';
		else
			$message .= '–°–µ–º–µ—Å—Ç—Ä: 2';
		$message .= "\n";

		$message .= '–ì—Ä—É–ø–ø–∞: ' . $schedule['data']['group']['name'] . ' (' . $schedule['data']['group']['city']  . ')';
		$message .= "\n";

		$message .= '–î–∞—Ç–∞: *' . date('d.m', time()-86400*(date('N')-1)) . ' - ' . date('d.m', time()+86400*(7-date('N'))) . "*\n\n";
		$message .= " ---- ---- \n\n";

		for ($weekDay = 1; $weekDay <= 7; $weekDay++) {
			$message .= $this->viewDay($schedule['data']['schedule_days'], $weekDay, $week);
			$message .= "\n";
		}
		$message .= " ---- ---- \n\n";

		return $message;
	}

	/**
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–º –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤–∏–¥–µ
	 *
	 * @param array $schedule - –º–∞—Å—Å–∏–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
	 * @return string
	 */
	public function viewNextWeek(array $schedule): string
	{
		$week = Schedule::getWeekName($schedule['data']['usual_time'], false, true);
		if ($week == 'at_numerator')
			$message = '–í—ã –±—É–¥–µ—Ç–µ —É—á–∏—Ç—å—Å—è –ø–æ —á–∏—Å–ª–∏—Ç–µ–ª—é';
		else
			$message = '–í—ã –±—É–¥–µ—Ç–µ —É—á–∏—Ç—å—Å—è –ø–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—é';
		$message .= "\n";

		if (date('n') > 8)
			$message .= '–°–µ–º–µ—Å—Ç—Ä: 1';
		else
			$message .= '–°–µ–º–µ—Å—Ç—Ä: 2';
		$message .= "\n";

		$message .= '–ì—Ä—É–ø–ø–∞: ' . $schedule['data']['group']['name'] . ' (' . $schedule['data']['group']['city']  . ')';
		$message .= "\n";

		$message .= '–î–∞—Ç–∞: *' . date('d.m', time()+(7-date('N')+1)*86400) . ' - ' . date('d.m', time()+86400*(7+(7-date('N')))) . "*\n\n";
		$message .= " ---- ---- \n\n";

		for ($weekDay = 1; $weekDay <= 7; $weekDay++) {
			$message .= $this->viewDay($schedule['data']['schedule_days'], $weekDay, $week);
			$message .= "\n";
		}
		$message .= " ---- ---- \n\n";

		return $message;
	}

	/**
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–º –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤–∏–¥–µ
	 *
	 * @param array $scheduleDays - –º–∞—Å—Å–∏–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
	 * @param int $weekDay - –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
	 * @param string $weekNum - –Ω–µ–¥–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–π –≤—ã–≤–æ–¥–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
	 * @return string
	 */
	protected function viewDay(array $scheduleDays, int $weekDay, string $weekNum): string
	{
		$return = '';
		$return .= 'üìå ' . $this->weekDays[$weekDay-1] . "\n";

		if (!isset ($scheduleDays[$weekDay-1][$weekNum]) || empty($scheduleDays[$weekDay-1][$weekNum]))
			return $return . "–í—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å\n";

		foreach ($scheduleDays[$weekDay-1][$weekNum] as $pair) {
			$return .= "*[{$pair['time']['string']}]*\n";
			$personExists = false;

			if (!empty($pair['subject']))
				$return .= ' - ' . $pair['subject'];

			if (!empty($pair['prefix']))
				$return .= ' ' . $pair['prefix'];

			if (!empty($pair['person'])) {
				$return .= "\n - " . $pair['person'];
				$personExists = true;
			}

			if (!empty($pair['cabinet'])) {
				if ($personExists)
					$return .= ' | ' . $pair['cabinet'];
				else
					$return .= "\n - " . $pair['cabinet'];
			}

			$return .= "\n";
		}

		return $return;
	}
}